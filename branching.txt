djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git switch -C feature/login
Switched to a new branch 'feature/login'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ echo sky>>file1.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ git add .
warning: LF will be replaced by CRLF in file1.txt.
The file will have its original line endings in your working directory

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ git commit -m "write sky to file1"
[feature/login 2cc4f39] write sky to file1
 1 file changed, 2 insertions(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ git log --oneline --all
2cc4f39 (HEAD -> feature/login) write sky to file1
2083a7f (master) first commit

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ ^C

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ ^C

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/login)
$ git checkout master
Switched to branch 'master'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git log master ..feature/login
commit 2cc4f398c5fd8ef9c5fd59df08e8cb9e6405ded3 (feature/login)
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 16:39:42 2021 +0530

    write sky to file1

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git diff master ..feature/login
diff --git a/file1.txt b/file1.txt
index ce01362..8c55e9c 100644
--- a/file1.txt
+++ b/file1.txt
@@ -1 +1,3 @@
 hello
+world
+sky

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git merge feature/login
Updating 2083a7f..2cc4f39
Fast-forward
 file1.txt | 2 ++
 1 file changed, 2 insertions(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git branch --merged
  feature/login
* master

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git branch --no--merged
error: unknown option `no--merged'
usage: git branch [<options>] [-r | -a] [--merged | --no-merged]
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track           set up tracking mode (see git-pull(1))
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      Unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display SHA-1s

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --list            list branch names
    --show-current        show current branch name
    --create-reflog       create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output


djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git branch --no-merged

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git branch feature/logout

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git checkout feature/logout
Switched to branch 'feature/logout'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/logout)
$ echo blue>>file1.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/logout)
$ git commit -am "write blue to file1"
warning: LF will be replaced by CRLF in file1.txt.
The file will have its original line endings in your working directory
[feature/logout 6541527] write blue to file1
 1 file changed, 1 insertion(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (feature/logout)
$ git switch master
Switched to branch 'master'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ echo green>>file1.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git commit -am "write green to file1"
warning: LF will be replaced by CRLF in file1.txt.
The file will have its original line endings in your working directory
[master b7a34c9] write green to file1
 1 file changed, 1 insertion(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git merge feature/logout
Auto-merging file1.txt
CONFLICT (content): Merge conflict in file1.txt
Automatic merge failed; fix conflicts and then commit the result.

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git mergetool

This message is displayed because 'merge.tool' is not configured.
See 'git mergetool --tool-help' or 'git help config' for more details.
'git mergetool' will now attempt to use one of the following tools:
opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc codecompare smerge emerge vimdiff
Merging:
file1.txt

Normal merge conflict for 'file1.txt':
  {local}: modified file
  {remote}: modified file
Hit return to start merge resolution tool (vimdiff):
djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git switch -C bugfix/login
fatal: cannot switch branch while merging
Consider "git merge --quit" or "git worktree add".

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ echo orange>>file.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git add file1.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git status
On branch master
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:
        modified:   file1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file.txt
        file1_BACKUP_1469.txt
        file1_BASE_1469.txt
        file1_LOCAL_1469.txt
        file1_REMOTE_1469.txt


djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git add .
warning: LF will be replaced by CRLF in file.txt.
The file will have its original line endings in your working directory

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master|MERGING)
$ git commit
[master abc57b2] Merge branch 'feature/logout'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git status
On branch master
nothing to commit, working tree clean

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git log
commit abc57b2aa1c24d757422a00da70d3715e2b78591 (HEAD -> master)
Merge: b7a34c9 6541527
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 17:42:19 2021 +0530

    Merge branch 'feature/logout'

    modified:   file1.txt

commit b7a34c93dc6acd7b62c6353f49a8b4cf324cc5fe
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 17:21:27 2021 +0530

    write green to file1

commit 6541527a286942d411efeb31bbb0e6bc7a66114e (feature/logout)
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 17:19:09 2021 +0530

    write blue to file1

commit 2cc4f398c5fd8ef9c5fd59df08e8cb9e6405ded3 (feature/login)
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 16:39:42 2021 +0530

    write sky to file1

commit 2083a7fac0e102b1557059f7f58bf531e772ff7c
Author: dinesh jani <dinesh.jani@paxcom.net>
Date:   Thu Aug 19 14:17:21 2021 +0530

    first commit

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git branch
  feature/login
  feature/logout
* master

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git switch -C bugfix/login
Switched to a new branch 'bugfix/login'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (bugfix/login)
$ echo orange>>file1.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (bugfix/login)
$ git commit -am "write orange to file1"
warning: LF will be replaced by CRLF in file1.txt.
The file will have its original line endings in your working directory
[bugfix/login d771380] write orange to file1
 1 file changed, 1 insertion(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (bugfix/login)
$ git switch master
Switched to branch 'master'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ echo green>>file2.txt

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git commit -am "write green to file2"
warning: LF will be replaced by CRLF in file2.txt.
The file will have its original line endings in your working directory
[master ee940c7] write green to file2
 1 file changed, 1 insertion(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git log --oneline --all --graph
* ee940c7 (HEAD -> master) write green to file2
| * d771380 (bugfix/login) write orange to file1
|/
*   abc57b2 Merge branch 'feature/logout'
|\
| * 6541527 (feature/logout) write blue to file1
* | b7a34c9 write green to file1
|/
* 2cc4f39 (feature/login) write sky to file1
* 2083a7f first commit

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git switch bugfix/login
Switched to branch 'bugfix/login'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (bugfix/login)
$ git rebase master
First, rewinding head to replay your work on top of it...
Applying: write orange to file1

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (bugfix/login)
$ git switch master
Switched to branch 'master'

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$ git merge bugfix/login
Updating ee940c7..799adff
Fast-forward
 file1.txt | 1 +
 1 file changed, 1 insertion(+)

djani@PXMT114-IG1 MINGW64 ~/Documents/gitpractice (master)
$


